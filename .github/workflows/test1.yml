name: Download File from EC2

on:
  # Allows you to manually trigger the workflow from the GitHub Actions UI
  workflow_dispatch:
    inputs:
      filename:
        description: 'File to download from EC2 (e.g., my_report.pdf, /var/log/app.log)'
        required: true
        default: 'my_file.txt' # Provide a sensible default

jobs:
  download_file:
    runs-on: ubuntu-latest # Or your preferred runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Good practice to have your repo code available

      - name: Debug - List EC2 host and username (for verification, remove in production)
        run: |
          echo "Connecting to host: ${{ secrets.EC2_HOST }}"
          echo "Using username: ${{ secrets.EC2_USERNAME }}"
          echo "Attempting to download file: /path/on/ec2/${{ github.event.inputs.filename }}"

      # (Optional) Add a step to verify file existence on EC2 before SCPing
      # This can help diagnose "No such file or directory" errors quickly
      - name: Verify file existence on EC2
        uses: appleboy/ssh-action@v1.0.0 # Use ssh-action for running commands
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            REMOTE_FILE_PATH="/home/${{ secrets.EC2_USERNAME }}/downloads/${{ github.event.inputs.filename }}" # Adjust this to your actual remote path
            echo "Checking if file exists on EC2: $REMOTE_FILE_PATH"
            if [ -f "$REMOTE_FILE_PATH" ]; then
              echo "File found. Permissions: $(ls -l "$REMOTE_FILE_PATH" | awk '{print $1}')"
            else
              echo "Error: File '$REMOTE_FILE_PATH' not found on EC2 or insufficient permissions."
              # exit 1 # Uncomment this to fail the workflow if the file doesn't exist
            fi

      - name: SCP Download File from EC2
        uses: appleboy/scp-action@v0.1.4 # A popular and reliable action for SCP
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          # The source path on your EC2 instance. IMPORTANT: Adjust this path!
          source: "/home/${{ secrets.EC2_USERNAME }}/downloads/${{ github.event.inputs.filename }}"
          # The target path on the GitHub Actions runner. "./" means current working directory.
          target: "./"
          # Optional: If you face 'tar' errors, you might need to specify the tar executable path on EC2
          # tar_exec: "/usr/bin/tar"
          # debug: true # Uncomment for more verbose logging if troubleshooting

      - name: List downloaded files (for verification)
        run: ls -la # See what was downloaded to the runner's workspace

      - name: Upload downloaded file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloaded-from-ec2 # Name of the artifact
          path: ${{ github.event.inputs.filename }} # Path to the downloaded file on the runner
          retention-days: 5 # How long to keep the artifact (optional)

      - name: Success Message
        run: echo "File ${{ github.event.inputs.filename }} successfully downloaded and uploaded as artifact!"
